% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvjagam.R
\name{mvjagam}
\alias{mvjagam}
\title{Fit a Bayesian multivariate dynamic GAM to a set of discrete time series}
\usage{
mvjagam(
  formula,
  knots,
  data_train,
  data_test,
  prior_simulation = FALSE,
  return_jags_data = FALSE,
  family = "nb",
  use_lv = FALSE,
  n_lv,
  trend_model = "RW",
  drift = FALSE,
  chains = 2,
  burnin = 5000,
  n_samples = 2000,
  thin = 4,
  parallel = TRUE,
  phi_prior,
  ar_prior,
  r_prior,
  tau_prior,
  upper_bounds
)
}
\arguments{
\item{formula}{A \code{character} string specifying the GAM formula. These are exactly like the formula
for a GLM except that smooth terms, s, te, ti and t2, can be added to the right hand side
to specify that the linear predictor depends on smooth functions of predictors (or linear functionals of these).}

\item{knots}{An optional \code{list} containing user specified knot values to be used for basis construction.
For most bases the user simply supplies the knots to be used, which must match up with the k value supplied
(note that the number of knots is not always just k). Different terms can use different numbers of knots,
unless they share a covariate.}

\item{data_train}{A \code{dataframe} or \code{list} containing the model response variable and covariates
required by the GAM \code{formula}. Should include columns:
'y' (the discrete outcomes; \code{NA}s allowed)
'series' (character or factor index of the series IDs)
'season' (numeric index of the seasonal time point for each observation)
and 'year' the numeric index for year.
Any other variables to be included in the linear predictor of \code{formula} must also be present}

\item{data_test}{Optional \code{dataframe} or \code{list} of test data containing at least 'series', 'season', and 'year'
in addition to any other variables included in the linear predictor of \code{formula}. If included, the
observations in \code{data_test} will be set to \code{NA} when fitting the model so that posterior
simulations can be obtained}

\item{prior_simulation}{\code{logical}. If \code{TRUE}, no observations are fed to the model, and instead
simulations from prior distributions are returned}

\item{return_jags_data}{\code{logical}. If \code{TRUE}, the list of data that is needed to fit the \code{JAGS}
model is returned, along with the initial values for smooth and AR parameters, once the model is fitted.
This will be helpful if users wish to modify the model file to add
other stochastic elements that are not currently avaiable in \code{mvgam}. Default is \code{FALSE} to reduce
the size of the returned object}

\item{family}{\code{character}. Must be either 'nb' (for Negative Binomial) or 'poisson'}

\item{use_lv}{\code{logical}. If \code{TRUE}, use dynamic factors to estimate series'
latent trends in a reduced dimension format. If \code{FALSE}, estimate independent latent trends for each series}

\item{n_lv}{\code{integer} the number of latent dynamic factors to use if \code{use_lv == TRUE}.
Cannot be \code{>n_series}. Defaults arbitrarily to \code{min(5, floor(n_series / 2))}}

\item{trend_model}{\code{character} specifying the time series dynamics for the latent trend. Options are:
'None' (no latent trend component; i.e. the GAM component is all that contributes to the linear predictor,
and the observation process is the only source of error; similarly to what is estimated by \code{\link[mcgv]{gam}}),
'Noise' (modelled as a Gaussian static white noise process),
'RW' (random walk with possible drift),
'AR1' (AR1 model with intercept),
'AR2' (AR2 model with intercept) or
'AR3' (AR3 model with intercept)}

\item{drift}{\code{logical} estimate a drift parameter in the latent trend components. Useful if the latent
trend is expected to broadly follow a non-zero slope. Note that if the latent trend is more or less stationary,
the drift parameter can become unidentifiable, especially if an intercept term is included in the GAM linear
predictor (which it is by default when calling \code{\link[mcgv]{jagam}}). Therefore this defaults to \code{FALSE}}

\item{chains}{\code{integer} specifying the number of parallel chains for the model}

\item{burnin}{\code{integer} specifying the number of iterations of the Markov chain to run during
adaptive mode to tune sampling algorithms}

\item{n_samples}{\code{integer} specifying the number of iterations of the Markov chain to run for
sampling the posterior distribution}

\item{thin}{Thinning interval for monitors}

\item{parallel}{\code{logical} specifying whether multiple cores should be used for
for generating \code{JAGS} simulations in parallel. If \code{TRUE}, the number of cores to use will be
\code{min(c(chains, parallel::detectCores() - 1))}}

\item{phi_prior}{\code{character} specifying (in JAGS syntax) the prior distribution for the drift terms/intercepts
in the latent trends}

\item{ar_prior}{\code{character} specifying (in JAGS syntax) the prior distribution for the AR terms
in the latent trends}

\item{r_prior}{\code{character} specifying (in JAGS syntax) the prior distribution for the Negative Binomial
overdispersion parameters. Note that this prior acts on the INVERSE of \code{r}, which is convenient
for inducing a complexity-penalising prior model whereby the observation process reduces to a Poisson
as the sampled parameter approaches \code{0}. Ignored if \code{family = 'poisson'}}

\item{tau_prior}{\code{character} specifying (in JAGS syntax) the prior distributions for the independent gaussian
precisions used for the latent trends (ignored if \code{use_lv == TRUE})}

\item{upper_bounds}{Optional \code{vector} of \code{integer} values specifying upper limits for each series. If supplied,
this generates a modified likelihood where values above the bound are given a likelihood of zero. Note this modification
is computationally expensive in \code{JAGS} but can lead to better estimates when true bounds exist. Default is to remove
truncation entirely (i.e. there is no upper bound for each series)}
}
\value{
A \code{list} object containing JAGS model output, the text representation of the model file,
the mgcv model output (for easily generating simulations at
unsampled covariate values), Dunn-Smyth residuals for each series and other key information needed
for other functions in the package
}
\description{
This function estimates the posterior distribution for a multivariate GAM that includes
smooth functions, specified in the GAM formula, and state-space latent trends, specified by trend_model.
There are currently two options for specifying the structures of the trends (either as latent
dynamic factors to capture trend dependencies in a reduced dimension format, or as independent trends)
}
\details{
A \code{\link[mcgv]{jagam}} model file is generated from \code{formula} and modified to include the latent
state space trends. Prior distributions for most important model parameters can be altered by the user to inspect model
sensitivities to given priors. Note that latent trends are estimated on the log scale so choose tau, AR and phi priors
accordingly. The model parameters are esimated in a Bayesian framework using Gibbs sampling
in \code{\link[run.jags]{runjags}}. For any smooth terms using the random effect basis (\code{\link[mcgv]{smooth.construct.re.smooth.spec}}),
a non-centred parameterisation is employed to avoid degeneracies that are common in hierarchical models.
When using a dynamic factor model for the trends, factor precisions are given
regularized penalty priors to theoretically allow some factors to be dropped from the model by squeezing increasing
factors' variances to zero. This is done to help protect against selecting too many latent factors than are needed to
capture dependencies in the data, so it can often be advantageous to set n_lv to a slightly larger number. However
larger numbers of factors do come with additional computational costs so these should be balanced as well.
For each series, randomized quantile (i.e. Dunn-Smyth) residuals are calculated for inspecting model diagnostics using
medians of posterior predictions. If the fitted model is appropriate then Dunn-Smyth residuals will be
standard normal in distribution and no autocorrelation will be evident
}
\seealso{
\code{\link[rjags]{jags.model}}, \code{\link[mcgv]{jagam}}, \code{\link[mcgv]{gam}}
}
\author{
Nicholas J Clark
}
