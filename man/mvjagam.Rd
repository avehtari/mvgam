% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvjagam.R
\name{mvjagam}
\alias{mvjagam}
\title{Fit a Bayesian multivariate GAM to a set of discrete time series}
\usage{
mvjagam(
  formula,
  data_train,
  data_test,
  prior_simulation = FALSE,
  use_nb = TRUE,
  use_lv = FALSE,
  n_lv = 5,
  trend_model = "RW",
  n.chains = 2,
  n.burnin = 5000,
  n.iter = 2000,
  thin = 2,
  auto_update = TRUE,
  phi_prior,
  r_prior = "dexp(0.001)",
  tau_prior,
  upper_bounds
)
}
\arguments{
\item{formula}{A \code{character} string specifying the GAM formula. These are exactly like the formula
for a GLM except that smooth terms, s, te, ti and t2, can be added to the right hand side
to specify that the linear predictor depends on smooth functions of predictors (or linear functionals of these).}

\item{data_train}{A \code{dataframe} containing the model response variable and covariates
required by the GAM \code{formula}. Should include columns:
'y' (the discrete outcomes; NAs allowed)
'series' (character or factor index of the series IDs)
'season' (numeric index of the seasonal time point for each observation)
'year' the numeric index for year, and
'in_season', an indicator for whether the observation is in season or not. If the counts tend to go to zero
during the off season (as in tick counts for example), setting 'in_season' to zero during these seasonal periods
can be useful as trends won't contribute
during this time but they will continue to evolve rather than being forced to zero during each off-season
Any other variables to be included in the linear predictor of \code{formula} must also be present}

\item{data_test}{Optional \code{dataframe} of test data containing at least 'series', 'season', 'year' and
'in_season' for the forecast horizon, in addition to any other variables included in the linear predictor of \code{formula}}

\item{prior_simulation}{\code{logical}. If \code{TRUE}, no observations are fed to the model, and instead
simulations from prior distributions are returned}

\item{use_nb}{\code{logical} If \code{TRUR}, use a Negative Binomial likelihood with estimated
overdispersion parameter r;
if \code{FALSE}, set r to \code{10,000} to approximate the Poisson distribution}

\item{use_lv}{\code{logical} If \code{TRUE}, use latent dynamic factors to estimate correlations in series'
latent trends. If \code{FALSE}, estimate covarying errors in the latent trends}

\item{n_lv}{\code{integer} the number of latent dynamic factors to use if \code{use_lv == TRUE}
and \code{use_lv == TRUE}. Cannot be \code{>n_series}. Defaults to \code{min(5, floor(n_series / 2))}}

\item{trend_model}{\code{character} specifying the time series dynamics for the latent trend. Options are:
'RW' (random walk with drift), 'AR1' (AR1 model with intercept), 'AR2' (AR2 model with intercept) or
'AR3' (AR3 model with intercept)}

\item{n.chains}{\code{integer} the number of parallel chains for the model}

\item{n.iter}{\code{integer} the number of iterations of the Markov chain to run}

\item{auto_update}{\code{logical} If \code{TRUE}, the model is run for up to \code{3} additional sets of
\code{n.iter} iterations, or until the lower 15th percentile of effective sample sizes reaches \code{100}}

\item{phi_prior}{\code{character} specifying (in JAGS syntax) the prior distributions for the drift terms in the
latent trends}

\item{r_prior}{\code{character} specifying (in JAGS syntax) the prior distribution for the Negative Binomial
overdispersion parameter}

\item{tau_prior}{\code{character} specifying (in JAGS syntax) the prior distributions for the independent gaussian
precisions used for the latent trends (ignored if \code{use_lv == TRUE})}

\item{upper_bounds}{Optional \code{vector} of \code{integer} values specifying upper limits for each series. If supplied,
this generates a modified likelihood where values above the bound are given a likelihood of zero. Note this modification
is computationally expensive in \code{JAGS} but can lead to better estimates when true bounds exist. Default is to remove
truncation entirely (i.e. there is no upper bound for each series)}
}
\value{
A \code{list} object containing JAGS model output, the text representation of the model file,
the mgcv model output (for easily generating simulations at
unsampled covariate values), the names of the smooth parameters, Dunn-Smyth residuals for each
series and information needed for other functions in the package
}
\description{
This function estimates the posterior distribution for a multivariate GAM that includes
smooth seasonality and possible other smooth functions specified in the GAM formula. State-space latent trends
(random walks with drift) are estimated for each series, with currently two options for specifying the
structures of the trends (either as latent dynamic factors to capture trend dependencies, or as independent trends)
}
\details{
A \code{\link[mcgv]{jagam}} model file is generated from \code{formula} and modified to include the latent
random walk state space trends. The model parameters are esimated in a Bayesian framework using Gibbs sampling
in \code{\link[rjags]{jags.model}}. For the time being, all series are assumed to have the same overdispersion
parameters when using a negative binomial distribution, though this will be relaxed in future versions. For each
series, randomized quantile (i.e. Dunn-Smyth) residuals are calculated for inspecting model diagnostics using
medians of posterior predictions. If the fitted model is appropriate then Dunn-Smyth residuals will be
standard normal in distribution and no autocorrelation will be evident
}
