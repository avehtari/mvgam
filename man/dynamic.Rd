% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dynamic.R
\name{dynamic}
\alias{dynamic}
\title{Defining dynamic coefficients in mvgam formulae}
\usage{
dynamic(variable, rho = 5, stationary = TRUE)
}
\arguments{
\item{variable}{The variable that the dynamic smooth will be a function of}

\item{rho}{Positive numeric stating the length scale to be used for approximating the
squared exponential Gaussian Process smooth. See \code{\link[mcgv]{gp.smooth}} for details}

\item{stationary}{logical. If \code{TRUE} (the default), the latent Gaussian Process
smooth will not have a linear trend component. If \code{FALSE},
a linear trend in the covariate is added to the Gaussian Process smooth. Leave at \code{TRUE}
if you do not believe the coefficient is evolving with much trend, as the linear component of the
basis functions can be hard to penalize to zero. This sometimes causes divergence issues in \code{Stan}
See \code{\link[mcgv]{gp.smooth}} for details}
}
\description{
Set up time-varying (dynamic) coefficients for use in mvgam models. Currently, only
low-rank Gaussian Process smooths are available for estimating the dynamics of the
time-varying coefficient.
}
\details{
\code{mvgam} currently sets up dynamic coefficients as low-rank
squared exponential Gaussian Process smooths via
the call \code{s(time, by = variable, bs = "gp", m = c(2, rho, 2))}. These smooths, if specified with
reasonable values for the length scale parameter, will give more realistic out of sample forecasts
than standard splines such as thin plate or cubic. But the user must set the
value for \code{rho}, as there is currently no support for estimating this value in \code{mgcv}.
This may not be too big of a problem, as estimating latent length scales is often difficult anyway. The
\code{rho} parameter should be thought of as a prior on the smoothness of the latent dynamic coefficient
function (where higher values of \code{rho} lead to smoother functions with more temporal covariance structure.
Values of \code{k} are
set automatically to ensure enough basis functions are used to approximate the expected
wiggliness of the underlying dynamic function (\code{k} will increase as \code{rho} decreases)
}
